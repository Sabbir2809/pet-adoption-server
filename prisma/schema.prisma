// prisma connection setup
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @unique @default(uuid())
  username           String
  email              String
  password           String
  needPasswordChange Boolean           @default(true)
  role               UserRole          @default(USER)
  isActive           Boolean           @default(true)
  gender             Gender?
  phone              String?
  address            String?
  avatarURL          String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  adoptionRequests   AdoptionRequest[]

  @@map("users")
}

model Pet {
  id                   String            @id @default(uuid())
  name                 String
  photos               String
  description          String
  age                  Int
  breed                String
  gender               Gender
  species              String
  size                 Size
  location             String
  temperament          String
  medicalHistory       String?
  adoptionRequirements String?
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  adoptionRequests     AdoptionRequest[]

  @@map("pets")
}

model AdoptionRequest {
  id                     String         @id @default(uuid())
  userId                 String
  petId                  String
  adoptionStatus         AdoptionStatus @default(PENDING)
  petOwnershipExperience String
  additionalInfo         String?
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt

  user User @relation(fields: [userId], references: [id])
  pet  Pet  @relation(fields: [petId], references: [id])

  @@map("adoption_requests")
}

enum UserRole {
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}

enum AdoptionStatus {
  PENDING
  APPROVED
  REJECTED
}
